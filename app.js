/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */
var express = require('express');
var session = require('express-session');
var device = require('express-device');
var logger = require('morgan');
var bodyParser = require('body-parser');
var cookieParser = require('cookie-parser');
var path = require('path');
var createError = require('http-errors');

var indexRouter = require('./routes/index');
var mobileRouter = require('./routes/mobile');
var searchAccountGroup = require('./routes/searchAccountGroup');
var searchAccountMaster = require('./routes/searchAccountMaster');
var searchAccountSection = require('./routes/searchAccountSection');
var searchAppAuthorities = require('./routes/searchAppAuthorities');
var searchAppContact = require('./routes/searchAppContact');
var searchAppGroupAuthorities = require('./routes/searchAppGroupAuthorities');
var searchAppGroupMembers = require('./routes/searchAppGroupMembers');
var searchAppGroups = require('./routes/searchAppGroups');
var searchAppMenus = require('./routes/searchAppMenus');
var searchAppMessage = require('./routes/searchAppMessage');
var searchAppPersistentLogins = require('./routes/searchAppPersistentLogins');
var searchAppRoom = require('./routes/searchAppRoom');
var searchAppUsers = require('./routes/searchAppUsers');
var searchGeneralLedger = require('./routes/searchGeneralLedger');
var searchProduct = require('./routes/searchProduct');
var searchProductAccount = require('./routes/searchProductAccount');
var searchStockMaster = require('./routes/searchStockMaster');
var readAccountGroup = require('./routes/readAccountGroup');
var readAccountMaster = require('./routes/readAccountMaster');
var readAccountSection = require('./routes/readAccountSection');
var readAppAuthorities = require('./routes/readAppAuthorities');
var readAppContact = require('./routes/readAppContact');
var readAppGroupAuthorities = require('./routes/readAppGroupAuthorities');
var readAppGroupMembers = require('./routes/readAppGroupMembers');
var readAppGroups = require('./routes/readAppGroups');
var readAppMenus = require('./routes/readAppMenus');
var readAppMessage = require('./routes/readAppMessage');
var readAppPersistentLogins = require('./routes/readAppPersistentLogins');
var readAppRoom = require('./routes/readAppRoom');
var readAppUsers = require('./routes/readAppUsers');
var readGeneralLedger = require('./routes/readGeneralLedger');
var readProduct = require('./routes/readProduct');
var readProductAccount = require('./routes/readProductAccount');
var readStockMaster = require('./routes/readStockMaster');
var newAccountGroup = require('./routes/newAccountGroup');
var newAccountMaster = require('./routes/newAccountMaster');
var newAccountSection = require('./routes/newAccountSection');
var newAppAuthorities = require('./routes/newAppAuthorities');
var newAppContact = require('./routes/newAppContact');
var newAppGroupAuthorities = require('./routes/newAppGroupAuthorities');
var newAppGroupMembers = require('./routes/newAppGroupMembers');
var newAppGroups = require('./routes/newAppGroups');
var newAppMenus = require('./routes/newAppMenus');
var newAppMessage = require('./routes/newAppMessage');
var newAppPersistentLogins = require('./routes/newAppPersistentLogins');
var newAppRoom = require('./routes/newAppRoom');
var newAppUsers = require('./routes/newAppUsers');
var newGeneralLedger = require('./routes/newGeneralLedger');
var newProduct = require('./routes/newProduct');
var newProductAccount = require('./routes/newProductAccount');
var newStockMaster = require('./routes/newStockMaster');
var writeAccountGroup = require('./routes/writeAccountGroup');
var writeAccountMaster = require('./routes/writeAccountMaster');
var writeAccountSection = require('./routes/writeAccountSection');
var writeAppAuthorities = require('./routes/writeAppAuthorities');
var writeAppContact = require('./routes/writeAppContact');
var writeAppGroupAuthorities = require('./routes/writeAppGroupAuthorities');
var writeAppGroupMembers = require('./routes/writeAppGroupMembers');
var writeAppGroups = require('./routes/writeAppGroups');
var writeAppMenus = require('./routes/writeAppMenus');
var writeAppMessage = require('./routes/writeAppMessage');
var writeAppPersistentLogins = require('./routes/writeAppPersistentLogins');
var writeAppRoom = require('./routes/writeAppRoom');
var writeAppUsers = require('./routes/writeAppUsers');
var writeGeneralLedger = require('./routes/writeGeneralLedger');
var writeProduct = require('./routes/writeProduct');
var writeProductAccount = require('./routes/writeProductAccount');
var writeStockMaster = require('./routes/writeStockMaster');
var deleteAccountGroup = require('./routes/deleteAccountGroup');
var deleteAccountMaster = require('./routes/deleteAccountMaster');
var deleteAccountSection = require('./routes/deleteAccountSection');
var deleteAppAuthorities = require('./routes/deleteAppAuthorities');
var deleteAppContact = require('./routes/deleteAppContact');
var deleteAppGroupAuthorities = require('./routes/deleteAppGroupAuthorities');
var deleteAppGroupMembers = require('./routes/deleteAppGroupMembers');
var deleteAppGroups = require('./routes/deleteAppGroups');
var deleteAppMenus = require('./routes/deleteAppMenus');
var deleteAppMessage = require('./routes/deleteAppMessage');
var deleteAppPersistentLogins = require('./routes/deleteAppPersistentLogins');
var deleteAppRoom = require('./routes/deleteAppRoom');
var deleteAppUsers = require('./routes/deleteAppUsers');
var deleteGeneralLedger = require('./routes/deleteGeneralLedger');
var deleteProduct = require('./routes/deleteProduct');
var deleteProductAccount = require('./routes/deleteProductAccount');
var deleteStockMaster = require('./routes/deleteStockMaster');

var domain = 'domain.com';
var app = express();

app.use(session({
    key: 'user_sid',
    secret: 'secret',
    resave: false,
    saveUninitialized: true,
    cookie: {
        expires: 6000000
    }  
}));

app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

app.use(logger('dev'));
app.use(cookieParser());
app.use(device.capture());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended : true}));

app.use(express.static(path.join(__dirname, 'public')));

app.use((req, res, next) => {
  req.session.domain = domain;
  if (req.cookies.user_sid && !req.session.user_sid) {
      res.clearCookie('user_sid');
  }
  next();
});

app.use('/', indexRouter);
app.use('/mobile', mobileRouter);
app.use('/searchAccountGroup', searchAccountGroup);
app.use('/searchAccountMaster', searchAccountMaster);
app.use('/searchAccountSection', searchAccountSection);
app.use('/searchAppAuthorities', searchAppAuthorities);
app.use('/searchAppContact', searchAppContact);
app.use('/searchAppGroupAuthorities', searchAppGroupAuthorities);
app.use('/searchAppGroupMembers', searchAppGroupMembers);
app.use('/searchAppGroups', searchAppGroups);
app.use('/searchAppMenus', searchAppMenus);
app.use('/searchAppMessage', searchAppMessage);
app.use('/searchAppPersistentLogins', searchAppPersistentLogins);
app.use('/searchAppRoom', searchAppRoom);
app.use('/searchAppUsers', searchAppUsers);
app.use('/searchGeneralLedger', searchGeneralLedger);
app.use('/searchProduct', searchProduct);
app.use('/searchProductAccount', searchProductAccount);
app.use('/searchStockMaster', searchStockMaster);
app.use('/readAccountGroup', readAccountGroup);
app.use('/readAccountMaster', readAccountMaster);
app.use('/readAccountSection', readAccountSection);
app.use('/readAppAuthorities', readAppAuthorities);
app.use('/readAppContact', readAppContact);
app.use('/readAppGroupAuthorities', readAppGroupAuthorities);
app.use('/readAppGroupMembers', readAppGroupMembers);
app.use('/readAppGroups', readAppGroups);
app.use('/readAppMenus', readAppMenus);
app.use('/readAppMessage', readAppMessage);
app.use('/readAppPersistentLogins', readAppPersistentLogins);
app.use('/readAppRoom', readAppRoom);
app.use('/readAppUsers', readAppUsers);
app.use('/readGeneralLedger', readGeneralLedger);
app.use('/readProduct', readProduct);
app.use('/readProductAccount', readProductAccount);
app.use('/readStockMaster', readStockMaster);
app.use('/newAccountGroup', newAccountGroup);
app.use('/newAccountMaster', newAccountMaster);
app.use('/newAccountSection', newAccountSection);
app.use('/newAppAuthorities', newAppAuthorities);
app.use('/newAppContact', newAppContact);
app.use('/newAppGroupAuthorities', newAppGroupAuthorities);
app.use('/newAppGroupMembers', newAppGroupMembers);
app.use('/newAppGroups', newAppGroups);
app.use('/newAppMenus', newAppMenus);
app.use('/newAppMessage', newAppMessage);
app.use('/newAppPersistentLogins', newAppPersistentLogins);
app.use('/newAppRoom', newAppRoom);
app.use('/newAppUsers', newAppUsers);
app.use('/newGeneralLedger', newGeneralLedger);
app.use('/newProduct', newProduct);
app.use('/newProductAccount', newProductAccount);
app.use('/newStockMaster', newStockMaster);
app.use('/writeAccountGroup', writeAccountGroup);
app.use('/writeAccountMaster', writeAccountMaster);
app.use('/writeAccountSection', writeAccountSection);
app.use('/writeAppAuthorities', writeAppAuthorities);
app.use('/writeAppContact', writeAppContact);
app.use('/writeAppGroupAuthorities', writeAppGroupAuthorities);
app.use('/writeAppGroupMembers', writeAppGroupMembers);
app.use('/writeAppGroups', writeAppGroups);
app.use('/writeAppMenus', writeAppMenus);
app.use('/writeAppMessage', writeAppMessage);
app.use('/writeAppPersistentLogins', writeAppPersistentLogins);
app.use('/writeAppRoom', writeAppRoom);
app.use('/writeAppUsers', writeAppUsers);
app.use('/writeGeneralLedger', writeGeneralLedger);
app.use('/writeProduct', writeProduct);
app.use('/writeProductAccount', writeProductAccount);
app.use('/writeStockMaster', writeStockMaster);
app.use('/deleteAccountGroup', deleteAccountGroup);
app.use('/deleteAccountMaster', deleteAccountMaster);
app.use('/deleteAccountSection', deleteAccountSection);
app.use('/deleteAppAuthorities', deleteAppAuthorities);
app.use('/deleteAppContact', deleteAppContact);
app.use('/deleteAppGroupAuthorities', deleteAppGroupAuthorities);
app.use('/deleteAppGroupMembers', deleteAppGroupMembers);
app.use('/deleteAppGroups', deleteAppGroups);
app.use('/deleteAppMenus', deleteAppMenus);
app.use('/deleteAppMessage', deleteAppMessage);
app.use('/deleteAppPersistentLogins', deleteAppPersistentLogins);
app.use('/deleteAppRoom', deleteAppRoom);
app.use('/deleteAppUsers', deleteAppUsers);
app.use('/deleteGeneralLedger', deleteGeneralLedger);
app.use('/deleteProduct', deleteProduct);
app.use('/deleteProductAccount', deleteProductAccount);
app.use('/deleteStockMaster', deleteStockMaster);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  next(createError(404));
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
