/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */
var express = require('express');
var session = require('express-session');
var device = require('express-device');
var logger = require('morgan');
var bodyParser = require('body-parser');
var cookieParser = require('cookie-parser');
var path = require('path');
var createError = require('http-errors');

var searchAccountGroup = require('./swagger/searchAccountGroup');
var searchAccountMaster = require('./swagger/searchAccountMaster');
var searchAccountSection = require('./swagger/searchAccountSection');
var searchAppAuthorities = require('./swagger/searchAppAuthorities');
var searchAppContact = require('./swagger/searchAppContact');
var searchAppGroupAuthorities = require('./swagger/searchAppGroupAuthorities');
var searchAppGroupMembers = require('./swagger/searchAppGroupMembers');
var searchAppGroups = require('./swagger/searchAppGroups');
var searchAppMenus = require('./swagger/searchAppMenus');
var searchAppMessage = require('./swagger/searchAppMessage');
var searchAppPersistentLogins = require('./swagger/searchAppPersistentLogins');
var searchAppRoom = require('./swagger/searchAppRoom');
var searchAppUsers = require('./swagger/searchAppUsers');
var searchGeneralLedger = require('./swagger/searchGeneralLedger');
var searchProduct = require('./swagger/searchProduct');
var searchProductAccount = require('./swagger/searchProductAccount');
var searchStockMaster = require('./swagger/searchStockMaster');
var readAccountGroup = require('./swagger/readAccountGroup');
var readAccountMaster = require('./swagger/readAccountMaster');
var readAccountSection = require('./swagger/readAccountSection');
var readAppAuthorities = require('./swagger/readAppAuthorities');
var readAppContact = require('./swagger/readAppContact');
var readAppGroupAuthorities = require('./swagger/readAppGroupAuthorities');
var readAppGroupMembers = require('./swagger/readAppGroupMembers');
var readAppGroups = require('./swagger/readAppGroups');
var readAppMenus = require('./swagger/readAppMenus');
var readAppMessage = require('./swagger/readAppMessage');
var readAppPersistentLogins = require('./swagger/readAppPersistentLogins');
var readAppRoom = require('./swagger/readAppRoom');
var readAppUsers = require('./swagger/readAppUsers');
var readGeneralLedger = require('./swagger/readGeneralLedger');
var readProduct = require('./swagger/readProduct');
var readProductAccount = require('./swagger/readProductAccount');
var readStockMaster = require('./swagger/readStockMaster');
var newAccountGroup = require('./swagger/newAccountGroup');
var newAccountMaster = require('./swagger/newAccountMaster');
var newAccountSection = require('./swagger/newAccountSection');
var newAppAuthorities = require('./swagger/newAppAuthorities');
var newAppContact = require('./swagger/newAppContact');
var newAppGroupAuthorities = require('./swagger/newAppGroupAuthorities');
var newAppGroupMembers = require('./swagger/newAppGroupMembers');
var newAppGroups = require('./swagger/newAppGroups');
var newAppMenus = require('./swagger/newAppMenus');
var newAppMessage = require('./swagger/newAppMessage');
var newAppPersistentLogins = require('./swagger/newAppPersistentLogins');
var newAppRoom = require('./swagger/newAppRoom');
var newAppUsers = require('./swagger/newAppUsers');
var newGeneralLedger = require('./swagger/newGeneralLedger');
var newProduct = require('./swagger/newProduct');
var newProductAccount = require('./swagger/newProductAccount');
var newStockMaster = require('./swagger/newStockMaster');
var writeAccountGroup = require('./swagger/writeAccountGroup');
var writeAccountMaster = require('./swagger/writeAccountMaster');
var writeAccountSection = require('./swagger/writeAccountSection');
var writeAppAuthorities = require('./swagger/writeAppAuthorities');
var writeAppContact = require('./swagger/writeAppContact');
var writeAppGroupAuthorities = require('./swagger/writeAppGroupAuthorities');
var writeAppGroupMembers = require('./swagger/writeAppGroupMembers');
var writeAppGroups = require('./swagger/writeAppGroups');
var writeAppMenus = require('./swagger/writeAppMenus');
var writeAppMessage = require('./swagger/writeAppMessage');
var writeAppPersistentLogins = require('./swagger/writeAppPersistentLogins');
var writeAppRoom = require('./swagger/writeAppRoom');
var writeAppUsers = require('./swagger/writeAppUsers');
var writeGeneralLedger = require('./swagger/writeGeneralLedger');
var writeProduct = require('./swagger/writeProduct');
var writeProductAccount = require('./swagger/writeProductAccount');
var writeStockMaster = require('./swagger/writeStockMaster');
var deleteAccountGroup = require('./swagger/deleteAccountGroup');
var deleteAccountMaster = require('./swagger/deleteAccountMaster');
var deleteAccountSection = require('./swagger/deleteAccountSection');
var deleteAppAuthorities = require('./swagger/deleteAppAuthorities');
var deleteAppContact = require('./swagger/deleteAppContact');
var deleteAppGroupAuthorities = require('./swagger/deleteAppGroupAuthorities');
var deleteAppGroupMembers = require('./swagger/deleteAppGroupMembers');
var deleteAppGroups = require('./swagger/deleteAppGroups');
var deleteAppMenus = require('./swagger/deleteAppMenus');
var deleteAppMessage = require('./swagger/deleteAppMessage');
var deleteAppPersistentLogins = require('./swagger/deleteAppPersistentLogins');
var deleteAppRoom = require('./swagger/deleteAppRoom');
var deleteAppUsers = require('./swagger/deleteAppUsers');
var deleteGeneralLedger = require('./swagger/deleteGeneralLedger');
var deleteProduct = require('./swagger/deleteProduct');
var deleteProductAccount = require('./swagger/deleteProductAccount');
var deleteStockMaster = require('./swagger/deleteStockMaster');

var domain = 'domain.com';
var app = express();

app.use(session({
    key: 'client_sid',
    secret: 'secret',
    resave: false,
    saveUninitialized: true,
    cookie: {
        expires: 60000
    }  
}));

app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

app.use(logger('dev'));
app.use(cookieParser());
app.use(device.capture());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended : true}));

app.use(express.static(path.join(__dirname, 'public_api')));

app.use((req, res, next) => {
  req.session.domain = domain;
  if (req.cookies.user_sid && !req.session.user_sid) {
      res.clearCookie('client_sid');        
  }
  next();
});

app.use('/searchAccountGroup', searchAccountGroup);
app.use('/searchAccountMaster', searchAccountMaster);
app.use('/searchAccountSection', searchAccountSection);
app.use('/searchAppAuthorities', searchAppAuthorities);
app.use('/searchAppContact', searchAppContact);
app.use('/searchAppGroupAuthorities', searchAppGroupAuthorities);
app.use('/searchAppGroupMembers', searchAppGroupMembers);
app.use('/searchAppGroups', searchAppGroups);
app.use('/searchAppMenus', searchAppMenus);
app.use('/searchAppMessage', searchAppMessage);
app.use('/searchAppPersistentLogins', searchAppPersistentLogins);
app.use('/searchAppRoom', searchAppRoom);
app.use('/searchAppUsers', searchAppUsers);
app.use('/searchGeneralLedger', searchGeneralLedger);
app.use('/searchProduct', searchProduct);
app.use('/searchProductAccount', searchProductAccount);
app.use('/searchStockMaster', searchStockMaster);
app.use('/readAccountGroup', readAccountGroup);
app.use('/readAccountMaster', readAccountMaster);
app.use('/readAccountSection', readAccountSection);
app.use('/readAppAuthorities', readAppAuthorities);
app.use('/readAppContact', readAppContact);
app.use('/readAppGroupAuthorities', readAppGroupAuthorities);
app.use('/readAppGroupMembers', readAppGroupMembers);
app.use('/readAppGroups', readAppGroups);
app.use('/readAppMenus', readAppMenus);
app.use('/readAppMessage', readAppMessage);
app.use('/readAppPersistentLogins', readAppPersistentLogins);
app.use('/readAppRoom', readAppRoom);
app.use('/readAppUsers', readAppUsers);
app.use('/readGeneralLedger', readGeneralLedger);
app.use('/readProduct', readProduct);
app.use('/readProductAccount', readProductAccount);
app.use('/readStockMaster', readStockMaster);
app.use('/newAccountGroup', newAccountGroup);
app.use('/newAccountMaster', newAccountMaster);
app.use('/newAccountSection', newAccountSection);
app.use('/newAppAuthorities', newAppAuthorities);
app.use('/newAppContact', newAppContact);
app.use('/newAppGroupAuthorities', newAppGroupAuthorities);
app.use('/newAppGroupMembers', newAppGroupMembers);
app.use('/newAppGroups', newAppGroups);
app.use('/newAppMenus', newAppMenus);
app.use('/newAppMessage', newAppMessage);
app.use('/newAppPersistentLogins', newAppPersistentLogins);
app.use('/newAppRoom', newAppRoom);
app.use('/newAppUsers', newAppUsers);
app.use('/newGeneralLedger', newGeneralLedger);
app.use('/newProduct', newProduct);
app.use('/newProductAccount', newProductAccount);
app.use('/newStockMaster', newStockMaster);
app.use('/writeAccountGroup', writeAccountGroup);
app.use('/writeAccountMaster', writeAccountMaster);
app.use('/writeAccountSection', writeAccountSection);
app.use('/writeAppAuthorities', writeAppAuthorities);
app.use('/writeAppContact', writeAppContact);
app.use('/writeAppGroupAuthorities', writeAppGroupAuthorities);
app.use('/writeAppGroupMembers', writeAppGroupMembers);
app.use('/writeAppGroups', writeAppGroups);
app.use('/writeAppMenus', writeAppMenus);
app.use('/writeAppMessage', writeAppMessage);
app.use('/writeAppPersistentLogins', writeAppPersistentLogins);
app.use('/writeAppRoom', writeAppRoom);
app.use('/writeAppUsers', writeAppUsers);
app.use('/writeGeneralLedger', writeGeneralLedger);
app.use('/writeProduct', writeProduct);
app.use('/writeProductAccount', writeProductAccount);
app.use('/writeStockMaster', writeStockMaster);
app.use('/deleteAccountGroup', deleteAccountGroup);
app.use('/deleteAccountMaster', deleteAccountMaster);
app.use('/deleteAccountSection', deleteAccountSection);
app.use('/deleteAppAuthorities', deleteAppAuthorities);
app.use('/deleteAppContact', deleteAppContact);
app.use('/deleteAppGroupAuthorities', deleteAppGroupAuthorities);
app.use('/deleteAppGroupMembers', deleteAppGroupMembers);
app.use('/deleteAppGroups', deleteAppGroups);
app.use('/deleteAppMenus', deleteAppMenus);
app.use('/deleteAppMessage', deleteAppMessage);
app.use('/deleteAppPersistentLogins', deleteAppPersistentLogins);
app.use('/deleteAppRoom', deleteAppRoom);
app.use('/deleteAppUsers', deleteAppUsers);
app.use('/deleteGeneralLedger', deleteGeneralLedger);
app.use('/deleteProduct', deleteProduct);
app.use('/deleteProductAccount', deleteProductAccount);
app.use('/deleteStockMaster', deleteStockMaster);

var swaggerUi = require('swagger-ui-express');
var swaggerJSDoc = require('swagger-jsdoc');

const swaggerDefinition = {
  info: {
    title: 'Micro Service Swagger API',
    version: '1.0.0',
    description: 'Endpoints to user administration routes',
  },
  host: 'localhost:3001',
  basePath: '/',
  securityDefinitions: {
    bearerAuth: {
      type: 'apiKey',
      name: 'Authorization',
      scheme: 'bearer',
      in: 'header',
    },
  },
};

const options = {
  swaggerDefinition,
  apis: ['./swagger/*.js'],
};

const swaggerSpec = swaggerJSDoc(options);
app.use('/swagger.json', (req, res) => {
  res.setHeader('Content-Type', 'application/json');
  res.send(swaggerSpec);
});

var optionSpec = {
  customCss: '.swagger-ui .opblock .opblock-summary-description {text-align: right;padding-right: 20px;}'
};
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec,optionSpec));

module.exports = app;
